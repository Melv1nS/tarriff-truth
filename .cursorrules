# Tariff Truth
Every time you choose to apply a rule(s), explicitly state the rule(s) in the output. You can abbreviate the rule description to a single word or phrase.

## Project Context
 A consumer-focused web application that estimates how proposed tariffs on specific countries (Canada, Mexico, China) would impact household budgets, breaking down costs by everyday spending categories.

## Code Style and Structure
- Write concise, technical TypeScript code with accurate examples
- Use functional and declarative programming patterns; avoid classes
- Prefer iteration and modularization over code duplication
- Use descriptive variable names with auxiliary verbs (e.g., isLoading, hasError)
- Structure repository files as follows:

```
├── public/
├── src/
    ├── app/        
        ├── api/            # Api Routes
            ├── sample-route/     # name of the route
                ├── route.ts      
        ├── auth/
            ├── signin/
            ├── callback/
        ├── components/     # Shared React components
        ├── utils/          # Helper functions
        ├── types/          # TypeScript types
        └── lib/            # Shared libraries
        ├── globals.css
        ├── layout.tsx
        ├── page.tsx
├── eslint.config.ts
├── jest.config.ts
├── next.config.ts
├── tailwind.config.ts
├── tsconfig.json
├── package.json
```

## Tech Stack
Frontend : Next.js 14 (App Router)
Styling: Tailwind CSS
Charts: Victory.js
Data Fetching: Trading Economics API
AI Analysis: FinGPT (HuggingFace)
Hosting: Vercel

# New File Suggestions
IMPORTANT: For every new file suggestion, you must:
1. Start with "Create new file at:" followed by the complete path
3. Include the file name with appropriate extension

Example:
Create new file at: src/app/utils/dateFormatter.ts

## Naming Conventions
- Use lowercase with dashes for directories (e.g., components/form-wizard)
- Favor named exports for components and utilities
- Use PascalCase for component files (e.g., VisaForm.tsx)
- Use camelCase for utility files (e.g., formValidator.ts)
- Jest test files should be placed next to the file they are testing
- Jest test files should be named [filename].test.ts
- Add new pages in the src/app directory in their own subdirectory following the naming convention [page-name]/page.tsx

## NextJS Usage
- Include "use client" for all client side component suggestions
- Only keep one version of config files and prefer config files that are .ts

## TypeScript Usage
- Use TypeScript for all code; prefer interfaces over types
- Avoid enums; use const objects with 'as const' assertion
- Use functional components with TypeScript interfaces
- Use absolute imports for all files @/app/...
- Avoid try/catch blocks unless there's good reason to translate or handle error in that abstraction
- Use explicit return types for all functions

## State Management
- Use React Context for global state when needed
- Implement proper cleanup in useEffect hooks

## Packages
- Verify that any package suggestions actually exist in npm

## Syntax and Formatting
- Use "function" keyword for pure functions
- Avoid unnecessary curly braces in conditionals
- Use declarative JSX
- Implement proper TypeScript discriminated unions for message types

## UI and Styling
- Implement Tailwind CSS for styling
- Preference for putting css classes in a module.css file next to the component the styles are for

## Error Handling
- Implement proper error boundaries
- Log errors appropriately for debugging
- Provide user-friendly error messages
- Handle network failures gracefully

## Security
- Implement Content Security Policy
- Sanitize user inputs
- Handle sensitive data properly
- Implement proper CORS handling

## Documentation
- Maintain clear README with setup instructions
- Document API interactions and data flows
- Don't include comments unless it's for complex logic
- Document permission requirements

## Development Workflow
- Use proper version control
- Implement proper code review process
- Test in multiple environments
- Follow semantic versioning for releases
- Maintain changelog